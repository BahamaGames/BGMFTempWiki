{{- if eq .Values.env "dev" }}
apiVersion: v1
kind: Service
metadata:
  name: sidecar
  namespace: {{.Values.dedicatedGameServer.namespace}}
spec:
  ports:
  - protocol: TCP
    port: {{.Values.dedicatedGameServer.PORT}}
---

apiVersion: v1
kind: Endpoints
metadata:
  name: sidecar
  namespace: {{.Values.dedicatedGameServer.namespace}}
subsets:
  - addresses:
      - ip: {{.Values.dedicatedGameServer.HOST}}
    ports:
      - port: {{.Values.dedicatedGameServer.PORT}}
---

apiVersion: v1
kind: Pod
metadata:
  name: sidecar
  namespace: {{.Values.dedicatedGameServer.namespace}}
  labels:
    app: sidecar
spec:
  restartPolicy: Always
  containers:
    - name: sidecar
      image: bahamagames/dgs-sidecar:latest
      imagePullPolicy: Always
      env:
        - name: UUID
          value: dgs-remote-testing
        - name: HOST
          valueFrom:
            configMapKeyRef:
              name: {{.Values.dedicatedGameServer.HOST}}
              key:  HOST
              optional: true
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: "{{.Values.dedicatedGameServer.PORT}}"
              key:  PORT
              optional: true
        - name: ACCESS_SECRET
          valueFrom:
            secretKeyRef:
              name: {{.Values.dedicatedGameServer.namespace}}
              key: ACCESS_SECRET
              optional: true
        - name: REDIS_LOCAL_HOST
          valueFrom:
            configMapKeyRef:
              name: {{.Values.dedicatedGameServer.namespace}}
              key:  REDIS_LOCAL_HOST
              optional: true
        - name: REDIS_LOCAL_PORT
          valueFrom:
            configMapKeyRef:
              name: {{.Values.dedicatedGameServer.namespace}}
              key:  REDIS_LOCAL_PORT
              optional: true
        - name: REDIS_REMOTE_USER_NAME
          valueFrom:
            configMapKeyRef:
              name: {{.Values.dedicatedGameServer.namespace}}
              key:  REDIS_REMOTE_USER_NAME
              optional: true
        - name: REDIS_REMOTE_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: {{.Values.dedicatedGameServer.namespace}}
              key:  REDIS_REMOTE_PASSWORD
              optional: true
        - name: REDIS_REMOTE_HOST
          valueFrom:
            configMapKeyRef:
              name: {{.Values.dedicatedGameServer.namespace}}
              key:  REDIS_REMOTE_HOST
              optional: true
        - name: REDIS_REMOTE_PORT
          valueFrom:
            configMapKeyRef:
              name: {{.Values.dedicatedGameServer.namespace}}
              key:  REDIS_REMOTE_PORT
              optional: true
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.remoteEntryPoint.name}}
  namespace: {{.Values.remoteEntryPoint.namespace}}
  labels:
    app: {{.Values.remoteEntryPoint.name}}
  annotations:
    keel.sh/policy: minor # <-- policy name according to https://semver.org/
    keel.sh/trigger: poll # <-- actively query registry, otherwise defaults to webhooks
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{.Values.remoteEntryPoint.namespace}}
  template:
    metadata:
      labels:
        app: {{.Values.remoteEntryPoint.namespace}}
    spec:
      containers:
      - name: {{.Values.remoteEntryPoint.name}}
        image: "bahamagames/rep:latest"
        imagePullPolicy: Always
        ports:
        - protocol: TCP
          containerPort: 8080
        env:
          - name: PORT
            valueFrom:
              configMapKeyRef:
                name: {{.Values.remoteEntryPoint.namespace}}
                key:  REMOTE_ENTRY_POINT_PORT
                optional: true
          - name: REDIS_LOCAL_HOST
            valueFrom:
              configMapKeyRef:
                name: {{.Values.remoteEntryPoint.namespace}}
                key:  REDIS_LOCAL_HOST
                optional: true
          - name: REDIS_LOCAL_PORT
            valueFrom:
              configMapKeyRef:
                name: {{.Values.remoteEntryPoint.namespace}}
                key:  REDIS_LOCAL_PORT
                optional: true
          - name: REDIS_REMOTE_USER_NAME
            valueFrom:
              configMapKeyRef:
                name: {{.Values.remoteEntryPoint.namespace}}
                key:  REDIS_REMOTE_USER_NAME
                optional: true
          - name: REDIS_REMOTE_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: {{.Values.remoteEntryPoint.namespace}}
                key:  REDIS_REMOTE_PASSWORD
                optional: true
          - name: REDIS_REMOTE_HOST
            valueFrom:
              configMapKeyRef:
                name: {{.Values.remoteEntryPoint.namespace}}
                key:  REDIS_REMOTE_HOST
                optional: true
          - name: REDIS_REMOTE_PORT
            valueFrom:
              configMapKeyRef:
                name: {{.Values.remoteEntryPoint.namespace}}
                key:  REDIS_REMOTE_PORT
                optional: true
              
          - name: UUID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
{{- end -}}